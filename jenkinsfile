pipeline {
    agent any

    environment {
        // Set AWS credentials as environment variables
        AWS_ACCESS_KEY_ID = credentials('aws-access-key-id')
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-key-id')
    }

        stage('Checkout') {
            steps {
                script {
                    // Use withCredentials to securely access your GitLab token
                    withCredentials([string(credentialsId: 'jenkinsinfra', variable: 'GITLAB_TOKEN')]) {
                        // Checkout the repository using the token
                        sh '''
                            git clone https://oauth2:${GITLAB_TOKEN}@gitlab.com/Myngahuynh/Jenkins-Infra.git
                        '''
                        echo 'Stage Checkout stage completed successfully!'
                    }
                }
            }
        }


        stage('Terraform Init') {
            steps {
                script {
                    // Initialize Terraform
                    sh 'terraform init'
                    echo 'Stage Init stage completed successfully!'
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                script {
                    // Generate and show an execution plan
                    sh 'terraform plan'
                    echo 'Stage plan stage completed successfully!'
                }
            }
        }

        stage('Confirm') {
            steps {
                script {
                    input message: 'Do you want to apply these changes?', ok: 'Yes, Apply'
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                script {
                    // Apply the changes required to reach the desired state
                    // Use `-auto-approve` to skip the interactive approval
                    sh 'terraform apply -auto-approve'
                    echo 'Stage Apply stage completed successfully!'
                }
            }
        }
    }

    post {
        success {
            echo 'Infrastructure created successfully!'
        }
        failure {
            echo 'Failed to create infrastructure.'
        }
    }
}
